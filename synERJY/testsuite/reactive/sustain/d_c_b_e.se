class Rc {

public Rc ()
{
  active { c1(); };
};

Sensor I1 = new Sensor(new SimInput());
Sensor I2 = new Sensor(new SimInput());
Sensor<int> II1 = new Sensor<int>(new SimInput());
Sensor<int> II2 = new Sensor<int>(new SimInput());

Signal<bool> OB1 = new Signal<bool>(new SimOutput());

Signal{?I1 && ?I2}<bool> FB1 =
     new Signal<bool>(new SimOutput());
Signal{?II1 && ?II2 && ($II1 == $II2)}<bool> FB2 = 
     new Signal<bool>(new SimOutput());

//
// bool flow (output): clock: expr(input Signals)
//

#ifdef T1
// trace
//
//       ->           OB1(false)
// I1    ->           OB1(false)
//       ->           OB1(false)
// I1 I2 -> FB1(true) OB1(true)
// I2    ->           OB1(true)
//       ->           OB1(true)
// I1 I2 -> FB1(false) OB1(false)
// I1    ->           OB1(false)
//
private void c1 () {
   [[ sustain {| FB1 := true when (?I1 && ?I2) -> ! pre(FB1); |};
   || loop { emit OB1($FB1); next; };
   ]];
  };
#endif

#ifdef T2
// trace
//                ->           OB1(false)
// II1(1)         ->           OB1(false)
//                ->           OB1(false)
// II1(1) II2(2)  ->           OB1(false)
// II2(1)         ->           OB1(false)
// II1(3) II2(3)  -> FB2(true) OB1(true)
// II1(-1) II2(0) ->           OB1(true)
// II1(10)        ->           OB1(true)
// II1(5) II2(5)  -> FB2(false) OB1(false)
//                ->           OB1(false)
//
// trace
//
//                ->           OB1(false)
// II1(1)         ->           OB1(false)
//                ->           OB1(false)
// II1(1) II2(2) I1 I2 ->      OB1(false)
// II2(1)         ->           OB1(false)
// II1(3) II2(3)  -> FB2(true) OB1(true)
// II1(-1) II2(0) ->           OB1(true)
// II1(10)        ->           OB1(true)
// II1(5) II2(5) I1 I2 -> FB2(false) OB1(false)
//                ->           OB1(false)
//
private void c1 () {
   [[ sustain {| 
       FB2 := true when (?II1 && ?II2 && ($II1 == $II2)) 
              -> ! pre(FB2); |};
   || loop { emit OB1($FB2); next; };
   ]];
};
#endif

} //end class Rc

