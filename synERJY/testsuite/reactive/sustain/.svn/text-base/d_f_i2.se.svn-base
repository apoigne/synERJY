class Rc {

public Rc ()
{
  active { c1(); };
};

Sensor OFF = new Sensor(new SimInput());

Signal<int> OI1 = new Signal<int>(new SimOutput());
Signal<int> OI2 = new Signal<int>(new SimOutput());
Signal<int> OI3 = new Signal<int>(new SimOutput());

Signal<int> FI1 = new Signal<int>(new SimOutput());
Signal<int> FI2 = new Signal<int>(new SimOutput());

#ifdef T1
// trace
//
//      -> FI1(10) OI1(10)
//      -> FI1(9)  OI1(9)
//      -> FI1(8)  OI1(8)
//      -> FI1(7)  OI1(7)
//      -> FI1(6)  OI1(6)
//      -> FI1(5)  OI1(5)
// OFF  -> 
//      -> 
//      -> 
//
private void c1 () {
    cancel strongly {
      [[ sustain {| FI1 := 10 -> pre(FI1) - 1; |};
      || loop { emit OI1($FI1); next; };
      ]];
    } when (?OFF) {};
  };
#endif

#ifdef T2
// trace
//
//      -> FI1(0) FI2(10) OI1(0) OI2(10) OI3(10)
//      -> FI1(1) FI2(9) OI1(1) OI2(9) OI3(10)
//      -> FI1(2) FI2(8) OI1(2) OI2(8) OI3(10)
//      -> FI1(3) FI2(7) OI1(3) OI2(7) OI3(10)
//      -> FI1(4) FI2(6) OI1(4) OI2(6) OI3(10)
//      -> FI1(5) FI2(5) OI1(5) OI2(5) OI3(10)
//      -> FI1(6) FI2(4) OI1(6) OI2(4) OI3(10)
//      -> FI1(7) FI2(3) OI1(7) OI2(3) OI3(10)
//      -> FI1(8) FI2(2) OI1(8) OI2(2) OI3(10)
//      -> FI1(9) FI2(1) OI1(9) OI2(1) OI3(10)
//      -> FI1(10) FI2(0) OI1(10) OI2(0) OI3(10)
//      -> FI1(11) FI2(-1) OI1(11) OI2(-1) OI3(10)
//      -> FI1(12) FI2(-2) OI1(12) OI2(-2) OI3(10)
// OFF  -> 
//      ->
//
private void c1 () {
    cancel strongly {
    [[ sustain {| FI1 :=  0 -> pre(FI1) + 1;
                  FI2 := 10 -> pre(FI2) - 1;
       |};
    || loop {
         emit OI1($FI1);
         emit OI2($FI2);
         emit OI3($FI1 + $FI2);
         next;
       };
    ]];
    } when (?OFF) {};
   };
#endif

} //end class Rc
