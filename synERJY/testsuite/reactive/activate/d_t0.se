class Rc {

public Rc () {
  active { c1(); };
};

Sensor I1 = new Sensor(new SimInput());
Sensor I2 = new Sensor(new SimInput());
Sensor I3 = new Sensor(new SimInput());

Signal O1 = new Signal(new SimOutput());
Signal O2 = new Signal(new SimOutput());
Signal O3 = new Signal(new SimOutput());
Signal O4 = new Signal(new SimOutput());
Signal O5 = new Signal(new SimOutput());


#ifdef T1
// trace
//      ->
// I1   ->
//      ->
// I2   ->
//      ->
// I1 I2 -> O1
//      ->
//
private void c1 () {
      activate { await ?I2; emit O1; } when (?I1);
  };
#endif

#ifdef T2
// trace
//      ->
// I1   ->
//      ->
// I2   ->
//      ->
// I1 I2 ->
//      ->
// I1   -> O1
//      ->
//
private void c1 () {
      activate { await ?I2; next; emit O1; } when (?I1);
  };

#endif

#ifdef T3
// trace
//      ->
// I1   ->
//      ->
// I2   ->
//      ->
// I1 I2 -> O1
//      ->
//
private void c1 () {
      activate { next; await ?I2; emit O1; } when (?I1);
  };

#endif

#ifdef T4
// trace
//      ->
//      ->
//      ->
//      ->
// I1   -> O1
//      ->
//
private void c1 () {
      activate { emit O1; } when (?I1);
  };
#endif

#ifdef T5
// trace
//      ->
//      ->
//      ->
//      ->
// I1   -> O1
//      ->
//
private void c1 () {
      activate { emit O1; next; } when (?I1);
  };
#endif

#ifdef T6
// trace
//      ->
//      ->
// I1   ->
//      ->
//      ->
// I1   -> O1
//      ->
//
private void c1 () {
      activate { next; emit O1; } when (?I1);
  };
#endif

#ifdef T7
// trace
//      ->
//      ->
// I1   ->
//      ->
//      ->
// I1   ->
//      ->
//
private void c1 () {
      activate { } when (?I1);
  };

#endif

#ifdef T8
// trace
//      ->
//      ->
// I1   ->
//      ->
//      ->
// I1   ->
//      ->
//
private void c1 () {
      activate { next; } when (?I1);
  };

#endif

#ifdef T9
// trace
//      ->
//      ->
// I1   ->
//      ->
//      ->
// I1   ->
//      ->
//
private void c1 () {
      activate { next; } when (?I1);
  };

#endif




} //end class Rc
