class Rc {

static final time timing = 1sec;


double c = 0.5;


#ifdef T1
// trace
//  -> y(55.000000)

double [7] a = {1.0,2.0,3.0,4.0,5.0,6.0,7.0};

Signal<double> y  = new Signal<double>(new SimOutput()); 

public Rc() {
  active {
     sustain {|
         y  := a[0:4] * a[0:4]^t;
     |};
  };
};
#endif

#ifdef T2
// trace
//  -> y(15.000000)

double [6] a = {1.0,2.0,3.0,4.0,5.0,6.0};
double [6] b = {1.0,1.0,1.0,1.0,1.0,6.0};

Signal<double> y  = new Signal<double>(new SimOutput()); 

public Rc() {
  active {
     sustain {|
         y  := a[0:4] * b[0:4]^t;
     |};
  };
};
#endif

#ifdef T3
// trace
// x(1.0) -> y(0.000000) z(1.000000)
// x(1.0) -> y(1.000000) z(1.000000)
// x(1.0) -> y(2.000000) z(1.000000)
// x(1.0) -> y(3.000000) z(1.000000)
// x(1.0) -> y(4.000000) z(1.000000)
// x(2.0) -> y(5.000000) z(2.000000)
// x(2.0) -> y(6.000000) z(2.000000)
// x(2.0) -> y(7.000000) z(2.000000)
// x(2.0) -> y(8.000000) z(2.000000)
// x(2.0) -> y(9.000000) z(2.000000)
// x(1.0) -> y(10.000000) z(1.000000)
// x(1.0) -> y(9.000000) z(1.000000)
// x(1.0) -> y(8.000000) z(1.000000)
// x(1.0) -> y(7.000000) z(1.000000)
// x(1.0) -> y(6.000000) z(1.000000)
// x(2.0) -> y(5.000000) z(2.000000)
// x(2.0) -> y(6.000000) z(2.000000)

double [5] a = {1.0,1.0,1.0,1.0,1.0};

Sensor<double> x  = new Sensor<double>(new SimInput()); 
Signal<double> y  = new Signal<double>(new SimOutput()); 
Signal<double[5]> w  = new Signal<double[5]>(); 
Signal<double> z  = new Signal<double>(new SimOutput()); 

public Rc() {
  active {
     sustain {|
         y := a * x..[1:5]^t;
         w := x..;
         z := w[0];
     |};
  };
};
#endif

#ifdef T4
// trace
// x(1.0) -> y(0.000000) z(1.000000)
// x(1.0) -> y(1.000000) z(1.000000)
// x(1.0) -> y(2.000000) z(1.000000)
// x(1.0) -> y(3.000000) z(1.000000)
// x(1.0) -> y(4.000000) z(1.000000)
// x(2.0) -> y(5.000000) z(2.000000)
// x(2.0) -> y(6.000000) z(2.000000)
// x(2.0) -> y(7.000000) z(2.000000)
// x(2.0) -> y(8.000000) z(2.000000)
// x(2.0) -> y(9.000000) z(2.000000)
// x(1.0) -> y(10.000000) z(1.000000)
// x(1.0) -> y(9.000000) z(1.000000)
// x(1.0) -> y(8.000000) z(1.000000)
// x(1.0) -> y(7.000000) z(1.000000)
// x(1.0) -> y(6.000000) z(1.000000)
// x(2.0) -> y(5.000000) z(2.000000)
// x(2.0) -> y(6.000000) z(2.000000)

double [5] a = {1.0,1.0,1.0,1.0,1.0};

Sensor<double> x  = new Sensor<double>(new SimInput()); 
Signal<double> y  = new Signal<double>(new SimOutput()); 
Signal<double[6]> w  = new Signal<double[6]>(); 
Signal<double> z  = new Signal<double>(new SimOutput()); 

public Rc() {
  active {
     sustain {|
         y := a * x..[1:5]^t;
         w := x..;
         z := w[0];
     |};
  };
};
#endif

#ifdef T5
// trace
// x(1.0) -> y(1.000000) z(1.000000)
// x(1.0) -> y(2.000000) z(1.000000)
// x(1.0) -> y(3.000000) z(1.000000)
// x(1.0) -> y(4.000000) z(1.000000)
// x(1.0) -> y(5.000000) z(1.000000)
// x(2.0) -> y(6.000000) z(2.000000)
// x(2.0) -> y(7.000000) z(2.000000)
// x(2.0) -> y(8.000000) z(2.000000)
// x(2.0) -> y(9.000000) z(2.000000)
// x(2.0) -> y(10.000000) z(2.000000)
// x(1.0) -> y(9.000000) z(1.000000)
// x(1.0) -> y(8.000000) z(1.000000)
// x(1.0) -> y(7.000000) z(1.000000)
// x(1.0) -> y(6.000000) z(1.000000)
// x(1.0) -> y(5.000000) z(1.000000)
// x(2.0) -> y(6.000000) z(2.000000)
// x(2.0) -> y(7.000000) z(2.000000)

double [6] a = {1.0,1.0,1.0,1.0,1.0,1.0};

Sensor<double> x  = new Sensor<double>(new SimInput()); 
Signal<double> y  = new Signal<double>(new SimOutput()); 
Signal<double> z  = new Signal<double>(new SimOutput()); 

public Rc() {
  active {
     sustain {|
         y := a[1:5] * x..^t;
         z := x..[0];
     |};
  };
};
#endif

#ifdef T6
// trace
// x(1.0) -> y0(1.000000) y1(0.000000) y2(0.000000) y3(0.000000)
// x(2.0) -> y0(2.000000) y1(1.000000) y2(0.000000) y3(0.000000)
// x(3.0) -> y0(3.000000) y1(2.000000) y2(1.000000) y3(0.000000)
// x(4.0) -> y0(4.000000) y1(3.000000) y2(2.000000) y3(1.000000)
// x(5.0) -> y0(5.000000) y1(4.000000) y2(3.000000) y3(2.000000)
// x(6.0) -> y0(6.000000) y1(5.000000) y2(4.000000) y3(3.000000)

Sensor<double> x    = new Sensor<double>(new SimInput()); 
Signal<double> y0   = new Signal<double>(new SimOutput()); 
Signal<double> y1   = new Signal<double>(new SimOutput()); 
Signal<double> y2   = new Signal<double>(new SimOutput()); 
Signal<double> y3   = new Signal<double>(new SimOutput()); 
Signal<double[6]> z = new Signal<double[6]>(); 


public Rc() {
  active{
     sustain {|
         z[0:3] := x..;
         y0 := z[0];
         y1 := z[1];
         y2 := z[2];
         y3 := z[3];
     |};
  };
};
#endif

#ifdef T7
// trace
// x(1.0) e(1.0)  -> y(0.500000) z0(0.500000) z1(0.000000) z2(0.000000) z3(0.000000) z4(0.000000)
// x(1.0) e(-2.0) -> y(-1.500000) z0(-0.500000) z1(-1.000000) z2(0.000000) z3(0.000000) z4(0.000000)

// x(1.0) e(1.0)  -> y(1.000000)
// x(1.0) e(1.0)  -> y(4.000000)
// x(1.0) e(1.0)  -> y(5.000000)
// x(2.0) e(1.0)  -> y(6.000000)
// x(2.0) e(1.0)  -> y(7.000000)
// x(2.0) e(1.0)  -> y(8.000000)
// x(2.0) e(1.0)  -> y(9.000000)
// x(2.0) e(1.0)  -> y(10.000000)
// x(1.0) e(1.0)  -> y(9.000000)
// x(1.0) e(1.0)  -> y(8.000000)
// x(1.0) e(1.0)  -> y(7.000000)
// x(1.0) e(1.0)  -> y(6.000000)
// x(1.0) e(1.0)  -> y(5.000000)
// x(2.0) e(1.0)  -> y(6.000000)
// x(2.0) e(1.0)  -> y(7.000000)

double [5] a = {1.0,1.0,1.0,1.0,1.0};

Sensor<double> x  = new Sensor<double>(new SimInput()); 
Sensor<double> e  = new Sensor<double>(new SimInput()); 
Signal<double> y  = new Signal<double>(new SimOutput()); 
Signal<double> z0  = new Signal<double>(new SimOutput()); 
Signal<double> z1  = new Signal<double>(new SimOutput()); 
Signal<double> z2  = new Signal<double>(new SimOutput()); 
Signal<double> z3  = new Signal<double>(new SimOutput()); 
Signal<double> z4  = new Signal<double>(new SimOutput()); 

Signal<double[12]> w  = new Signal<double[12]>(); 

double mu = 0.5;

public Rc() {
  active{
     sustain {|
         y  := w[0:9] * x..^t;
    w[0:9]  := (pre(w))[0:9] + mu * e * x..;
         z0 := w[0];
         z1 := w[1];
         z2 := w[2];
         z3 := w[3];
         z4 := w[4];
     |};
  };
};
#endif

#ifdef T8
// trace
// x(1.0) e(1.0)  -> y(0.500000) z0(0.500000) z1(0.000000) z2(0.000000) z3(0.000000) z4(0.000000)
// x(1.0) e(-2.0) -> y(-1.500000) z0(-0.500000) z1(-1.000000) z2(0.000000) z3(0.000000) z4(0.000000)

// x(1.0) e(1.0)  -> y(1.000000)
// x(1.0) e(1.0)  -> y(4.000000)
// x(1.0) e(1.0)  -> y(5.000000)
// x(2.0) e(1.0)  -> y(6.000000)
// x(2.0) e(1.0)  -> y(7.000000)
// x(2.0) e(1.0)  -> y(8.000000)
// x(2.0) e(1.0)  -> y(9.000000)
// x(2.0) e(1.0)  -> y(10.000000)
// x(1.0) e(1.0)  -> y(9.000000)
// x(1.0) e(1.0)  -> y(8.000000)
// x(1.0) e(1.0)  -> y(7.000000)
// x(1.0) e(1.0)  -> y(6.000000)
// x(1.0) e(1.0)  -> y(5.000000)
// x(2.0) e(1.0)  -> y(6.000000)
// x(2.0) e(1.0)  -> y(7.000000)


Sensor<double> x  = new Sensor<double>(new SimInput()); 
Sensor<double> e  = new Sensor<double>(new SimInput()); 
Signal<double> y  = new Signal<double>(new SimOutput()); 
Signal<double> z0  = new Signal<double>(new SimOutput()); 
Signal<double> z1  = new Signal<double>(new SimOutput()); 
Signal<double> z2  = new Signal<double>(new SimOutput()); 
Signal<double> z3  = new Signal<double>(new SimOutput()); 
Signal<double> z4  = new Signal<double>(new SimOutput()); 

Signal<double[10]> w  = new Signal<double[10]>(); 

double mu = 0.5;

public Rc() {
  active{
     sustain {|
         y  := w * x..[0:9]^t;
         w  := pre(w) + mu * e .* x..;
         z0 := w[0];
         z1 := w[1];
         z2 := w[2];
         z3 := w[3];
         z4 := w[4];
     |};
  };
};
#endif

#ifdef T9
// trace
// x(1.0) -> y0(1.000000) y1(0.000000) y2(0.000000) y3(0.000000) 
// x(2.0) -> y0(2.000000) y1(1.000000) y2(0.000000) y3(0.000000) 
// x(3.0) -> y0(3.000000) y1(2.000000) y2(1.000000) y3(0.000000) 
// x(4.0) -> y0(4.000000) y1(3.000000) y2(2.000000) y3(1.000000) 
// x(5.0) -> y0(5.000000) y1(4.000000) y2(3.000000) y3(2.000000) 
// x(6.0) -> y0(6.000000) y1(5.000000) y2(4.000000) y3(3.000000) 

Sensor<double> x = new Sensor<double>(new SimInput());

Signal<double[6]> y = new Signal<double[6]>();
Signal<double> y0   = new Signal<double>(new SimOutput()); 
Signal<double> y1   = new Signal<double>(new SimOutput()); 
Signal<double> y2   = new Signal<double>(new SimOutput()); 
Signal<double> y3   = new Signal<double>(new SimOutput()); 


 public Rc() {
     active {
        sustain {|
           y[2:5] := x..;
           y0 := y[2];
           y1 := y[3];
           y2 := y[4];
           y3 := y[5];
        |};
   };
  };
#endif

#ifdef T10
// trace
// x(1.0) -> y0(0.000000) y1(0.000000) y2(0.000000) y3(0.000000) 
// x(2.0) -> y0(1.000000) y1(0.000000) y2(0.000000) y3(0.000000) 
// x(3.0) -> y0(2.000000) y1(1.000000) y2(0.000000) y3(0.000000) 
// x(4.0) -> y0(3.000000) y1(2.000000) y2(1.000000) y3(0.000000) 
// x(5.0) -> y0(4.000000) y1(3.000000) y2(2.000000) y3(1.000000) 
// x(6.0) -> y0(5.000000) y1(4.000000) y2(3.000000) y3(2.000000) 
// x(7.0) -> y0(6.000000) y1(5.000000) y2(4.000000) y3(3.000000) 

Sensor<double> x = new Sensor<double>(new SimInput());

Signal<double[6]> y = new Signal<double[6]>();
Signal<double> y0   = new Signal<double>(new SimOutput()); 
Signal<double> y1   = new Signal<double>(new SimOutput()); 
Signal<double> y2   = new Signal<double>(new SimOutput()); 
Signal<double> y3   = new Signal<double>(new SimOutput()); 


 public Rc() {
     active {
        sustain {|
           y[2:5] := pre(x..);
           y0 := y[2];
           y1 := y[3];
           y2 := y[4];
           y3 := y[5];
        |};
   };
  };
#endif


#ifdef T11
// trace
// x(1.0) -> y(1.000000)
// x(2.0) -> y(4.000000)
// x(3.0) -> y(11.000000)
// x(4.0) -> y(26.000000)
// x(5.0) -> y(57.000000)
// x(6.0) -> y(119.000000)
// x(7.0) -> y(242.000000)

Sensor<double> x = new Sensor<double>(new SimInput());

Signal<double> y    = new Signal<double>(new SimOutput());

double [5] a = {1.0,1.0,1.0,1.0,1.0};
double [6] b = {1.0,1.0,1.0,1.0,1.0,1.0};

 public Rc() {
     active {
        sustain {|
           y := a * x..^t + b[1:5] * pre(y..)^t;           
        |};
   };
  };
#endif

}
