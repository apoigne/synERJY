class Rc {

public Rc () {
  active { react(); };
};

Sensor<bool>       IB1 = new Sensor<bool>(new SimInput());
Signal<bool>       OB1 = new Signal<bool>(new SimOutput());
Signal{?IB1}<bool> FB1 = new Signal<bool>(new SimOutput());

#ifdef T1
// trace
//            -> OB1(false)
// IB1(false) -> FB1(true) OB1(true)
// IB1(false) -> FB1(true) OB1(true)
//            -> OB1(true)
// IB1(true)  -> FB1(true) OB1(true)
//            -> OB1(true)
//
private void react () {
   [[
      sustain {| FB1 := (true when ?IB1) -> (?IB1 when ?IB1); |};
   ||
      loop { emit OB1($FB1); next; };
   ]];
  };

#endif

#ifdef T2
// trace
//            -> OB1(false)
// IB1(false) -> FB1(true) OB1(true)
// IB1(false) -> FB1(false) OB1(false)
//            ->  OB1(false)
// IB1(true)  -> FB1(true) OB1(true)
//            -> OB1(true)
//
private void react () {
   [[
      sustain {| FB1 := (true when ?IB1) -> ($IB1 when ?IB1); |};
   ||
      loop { emit OB1($FB1); next; };
   ]];
  };

#endif

} //end class Rc

