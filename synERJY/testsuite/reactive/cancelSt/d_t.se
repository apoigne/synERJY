class Rc {

public Rc () {
    active { c1(); };
};

Sensor I1 = new Sensor(new SimInput());
Sensor I2 = new Sensor(new SimInput());

Signal O1 = new Signal(new SimOutput());
Signal O2 = new Signal(new SimOutput());
Signal O3 = new Signal(new SimOutput());
Signal O4 = new Signal(new SimOutput());

#ifdef T1
// trace
//      ->
//      -> O1
//      -> O1
// I1   ->
//      -> O2
//
// trace
//      ->
// I1   ->
//      -> O2
//
private void c1 () {
    cancel strongly {
      loop { next; emit O1; };
    } when (?I1) {};
    next; emit O2;
  };
#endif

#ifdef T2
// trace
//      ->
//      -> O1
//      -> O1

// I1   -> O2
//      -> O3
//
private void c1 () {
    cancel strongly {
      loop { next; emit O1; };
    } when (?I1) { emit O2; };
    next; emit O3;
  };
#endif

#ifdef T3
// trace
//      ->
//      -> O1
//      -> O1
//      -> O1
// I1   -> O2
//      -> O4
//
// trace
//      ->
//      -> O1
//      -> O1
// I1 I2        -> O2
//      -> O4
//
// trace
//      ->
//      -> O1
//      -> O1
// I2   -> O3
//      -> O4
//
private void c1 () {
    cancel strongly {
      loop { next; emit O1; };
   } when (?I1) { emit O2;
    } else when (?I2) { emit O3;
    };
    next; emit O4;
  };
#endif

#ifdef T4
// trace
//      ->
//      ->
// I1   -> O1
//      -> O1
//      -> O1
// I2   ->
//      -> O2
//
private void c1 () {
    await ?I1;
    cancel strongly {
      loop { emit O1; next; };
    } when (?I2) {};
    next; emit O2;
  };
#endif

} //end class Rc
