class Rc {

public Rc () {
    active { c1(); };
};

Sensor I1 = new Sensor(new SimInput());
Sensor I2 = new Sensor(new SimInput());
Sensor I3 = new Sensor(new SimInput());

Signal O1 = new Signal(new SimOutput());
Signal O2 = new Signal(new SimOutput());
Signal O3 = new Signal(new SimOutput());
Signal O4 = new Signal(new SimOutput());
Signal O5 = new Signal(new SimOutput());
Signal O6 = new Signal(new SimOutput());

#ifdef T1
// trace
//      -> O6
//      -> O1 O2
//      -> O1 O2
//      -> O1 O2
// I1   -> O3
//      -> O6
//      ->
//      ->
//
// trace
//      -> O6
//      -> O1 O2
//      -> O1 O2
//      -> O1 O2
// I1 I2 I3 -> O3
//      -> O6
//      ->
//      ->
//
// trace
//      -> O6
//      -> O1 O2
//      -> O1 O2
//      -> O1 O2
// I2 I3 -> O4
//      -> O6
//      ->
//      ->
//
// trace
//      -> O6
//      -> O1 O2
//      -> O1 O2
//      -> O1 O2
// I3   -> O5
//      -> O6
//      ->
//      ->
//
private void c1 () {
   emit O6;
   cancel strongly {
     [[
       loop { next; emit O1; };
     ||
       loop { next; emit O2; };
     ]];
  } when (?I1) { emit O3;
   } else when (?I2) { emit O4;
   } else when (?I3) { emit O5;
   };
    next; emit O6;
  };
#endif

#ifdef T2
// trace
//      -> O6
//      -> O1
//      -> O1
//      -> O1
// I1   -> O1 O2
// I1   -> O1 O2
//      -> O1
// I1   -> O1 O2
// I1 I2 ->
//      -> O3
//      ->
//
private void c1 () {
   emit O6;
   cancel strongly {
      [[
        loop { next; emit O1; };
      ||
        activate { loop { emit O2; next; };  } when (?I1);
      ]];
    } when (?I2) {};
    next; emit O3;
  };
#endif

#ifdef T3
// trace
//      -> O6 O2
//      -> O1 O2
//      -> O1 O2
// I2   -> O3
//      ->
//      ->
//
// trace
//      -> O6 O2
//      -> O1 O2
// I1   -> O1
//      -> O1
//      -> O1
// I2   -> O3
//      ->
//      ->
//
// trace
// I1 I2 -> O6 O3
//      ->
// I1   ->
//      ->
//      ->
//
private void c1 () {
   emit O6;
   cancel strongly {
      [[
        loop { next; emit O1; };
      ||
        cancel strongly {
          loop { emit O2; next; };
        } when (?I1) {};
      ]];
    } when (?I2) {};
    emit O3;
  };
#endif

} //end class Rc
