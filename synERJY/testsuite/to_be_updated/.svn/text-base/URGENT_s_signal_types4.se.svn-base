class Rc {

  public Rc() {
    active {
    };
  };

  Signal x1 = new Signal();
 
#ifdef E1
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E2
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E3
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E4
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E5
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E6
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E7
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E8
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1,x1);   
#endif

#ifdef E9
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1);   
#endif

#ifdef E10
// [[ xxx ]]
   Rc1 o2 = new Rc1(x1,x1);   
#endif

} //end class Rc

#ifdef E1
// test case continuation
class Rc1 {
 
  Signal xx1;
 
  public Rc1(Signal x) {
    active {
         emit xx1
    };
  };
#endif

#ifdef E2
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();
 
  public Rc1(Signal x) {
    xx1 = x;
    active {
      emit xx1
    };
  };
#endif

#ifdef E3
// test case continuation
class Rc1 {
 
  Signal xx1;

  int y;
 
  public Rc1(Signal x) {
    xx1 = x;
    y = 3;
    active {
        emit xx1
    };
  };
#endif

#ifdef E4
// test case continuation
class Rc1 {
 
  Signal xx1;

  int y = 0;
 
  public Rc1(Signal x) {
    if y > 4 { xx1 = x; };
    active {
      emit xx1
    };
  };
#endif

#ifdef E5
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();
  int y = 0;
 
  public Rc1(Signal x) {
    if y > 4 { xx1 = x; };
    active {
      emit xx1
    };
  };
#endif

#ifdef E6
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();

  public Rc1(Signal x) {
    xx1 = x;
    xx1 = x;
    active {
      emit xx1
    };
  };
#endif

#ifdef E7
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();

  public Rc1(Signal x) {
    xx1 = new Signal();
    xx1 = x;
    active {
      emit xx1
    };
  };
#endif

#ifdef E8
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();

  public Rc1(Signal x) {
    xx1 = new Signal();
    xx1 = new Signal();
    active {
      emit xx1
    };
  };
#endif


#ifdef E9
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();

  int y = 0;
 
  public Rc1(Signal x) {
    if y > 4 { xx1 = x; };
    xx1 = x;
    active {
      emit xx1
    };
  };
#endif

#ifdef E10
// test case continuation
class Rc1 {
 
  Signal xx1 = new Signal();
 
  public Rc1(Signal x,Signal y) {
     if y > 4 { xx1 = x; };
     xx1 = x;
     xx1 = y;
     active {
       emit xx1
     };
  };
#endif

} //end class Rc
