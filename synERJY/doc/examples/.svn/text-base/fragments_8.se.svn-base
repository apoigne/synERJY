 class LabelledMethods1 {
    void data1 () { nothing; };
    void data2 () { nothing; };
// tex_start labelled-methods-1
    public LabelledMethods1 () {
        active { l1:: m1(); };
    };

    void m1 () { 
        [[ l2:: data1(); 
        || l3:: data2(); 
        ]]; 
    };

    precedence {
        l1::l2:: < l1::l3::; 
    };
// tex_end labelled-methods-1
}

class LabelledMethods2 {
    void data1 () { nothing; };
    void data2 () { nothing; };
    Signal a = new Signal(new SimOutput());
// tex_start labelled-methods-2
    public LabelledMethods2 () {
        active { [[ l1:: m1(); || l2:: m2(); ]]; };
    };

    void m1 () { l3:: data1(); emit a; };

    void m2 () { l4:: data2(); emit a; };

    precedence {
        l1::l3:: < l2::l4::; 
    };
// tex_end labelled-methods-2   
}

